Search.setIndex({"docnames": ["index", "polytensor/api", "polytensor/generated/polytensor", "polytensor/generated/polytensor.Polynomial", "polytensor/index", "polytensor/modules", "polytensor/polynomial", "polytensor/polytensor", "polytensor/usage"], "filenames": ["index.rst", "polytensor/api.rst", "polytensor/generated/polytensor.rst", "polytensor/generated/polytensor.Polynomial.rst", "polytensor/index.rst", "polytensor/modules.rst", "polytensor/polynomial.rst", "polytensor/polytensor.rst", "polytensor/usage.rst"], "titles": ["Welcome to NanoMetaML\u2019s documentation!", "&lt;no title&gt;", "polytensor", "polytensor.Polynomial", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polytensor</span></code>", "polytensor", "&lt;no title&gt;", "polytensor.polynomial module", "Usage"], "terms": {"polytensor": [0, 8], "api": 0, "usag": 0, "exampl": [0, 7], "i": [4, 7], "python": 4, "packag": 4, "cuda": 4, "acceler": 4, "parallel": 4, "evalu": 4, "regress": 4, "f": [4, 7], "x": [4, 7], "c": 4, "sum_": [4, 7], "0": 4, "n": 4, "a_i": 4, "x_i": [4, 7], "j": 4, "a_": 4, "x_j": 4, "modul": [4, 5], "densepolynomi": [4, 5, 7], "sparsepolynomi": [4, 5, 7], "To": [4, 8], "us": [4, 7, 8], "first": [4, 8], "pip": [4, 8], "from": 4, "command": 4, "line": 4, "m": 4, "venv": [4, 8], "sourc": 4, "bin": 4, "activ": 4, "git": 4, "http": 4, "github": 4, "com": 4, "btrainwilson": 4, "Or": 4, "unzip": 4, "zip": 4, "cd": 4, "e": 4, "all": [4, 7], "follow": 4, "assum": 4, "you": 4, "have": 4, "import": 4, "The": [4, 7], "easiest": 4, "wai": 4, "begin": 4, "creat": 4, "list": [4, 7], "term": [4, 7], "coeffici": [4, 7], "consid": 4, "x_0": 4, "2": 4, "x_1": 4, "3": [4, 7], "5": 4, "each": [4, 7], "specifi": [4, 7], "indec": 4, "valu": [4, 7], "For": [4, 7], "associ": 4, "1": 4, "etc": 4, "tupl": 4, "we": [4, 7], "can": 4, "also": 4, "random": 4, "gener": 4, "code": 4, "10": 4, "variabl": [4, 7], "sampl": 4, "gaussian": 4, "mathcal": 4, "k": 4, "x_k": 4, "sim": 4, "where": 4, "": [4, 7], "g": 4, "torch": [4, 7], "num_var": 4, "per": 4, "degre": 4, "num_per_degre": 4, "function": [4, 7], "sample_fn": 4, "lambda": 4, "rand": 4, "coeffpuborandomsampl": 4, "num_term": 4, "given": [4, 7], "either": 4, "more": 4, "effici": 4, "fewer": 4, "while": [4, 7], "under": 4, "hood": 4, "remain": 4, "dictionari": [4, 7], "definit": 4, "kei": [4, 7], "ar": [4, 7], "previou": 4, "poli": 4, "tensor": [4, 7], "y_p": 4, "which": 4, "equival": 4, "y_": 4, "item": 4, "prod": 4, "assert": 4, "np": 4, "allclos": 4, "detach": 4, "cpu": [4, 7], "numpi": 4, "In": 4, "fact": 4, "loop": 4, "abov": 4, "exactli": 4, "how": 4, "class": [4, 7], "wrapper": 4, "around": 4, "__call__": 4, "method": 4, "through": 4, "point": 4, "now": 4, "At": 4, "glanc": 4, "store": [4, 7], "one": [4, 7], "element": 4, "exploit": 4, "einsum": [4, 7], "when": 4, "than": 4, "number": 4, "small": 4, "compar": 4, "possibl": 4, "d": 4, "comput": [4, 7], "thi": [4, 7], "faster": 4, "enumer": 4, "similar": 4, "size": 4, "howev": 4, "nowher": 4, "close": 4, "most": 4, "better": 4, "your": 4, "ha": 4, "100": 4, "quadrat": 4, "linear": 4, "like": 4, "those": 4, "distribut": 4, "throughout": 4, "6": 4, "monomi": [4, 7], "polynomi": 5, "forward": [5, 7], "polyd": [5, 7], "valid": [5, 7], "devic": 7, "str": 7, "dtype": 7, "float32": 7, "kwarg": 7, "base": 7, "A": 7, "dens": 7, "pytorch": 7, "autograd": 7, "differenti": 7, "sigma_": 7, "prod_": 7, "paramet": 7, "input": 7, "repres": 7, "return": 7, "type": 7, "t": 7, "act": 7, "vector": 7, "einstein": 7, "summat": 7, "convent": 7, "dimension": 7, "shape": 7, "batch_siz": 7, "num_dim": 7, "configur": 7, "system": 7, "high": 7, "triangular": 7, "matrix": 7, "energi": 7, "batch": 7, "check": 7, "arg": 7, "abc": 7, "abstract": 7, "defin": 7, "perform": 7, "everi": 7, "call": 7, "should": 7, "overridden": 7, "subclass": 7, "although": 7, "recip": 7, "pass": 7, "need": 7, "within": 7, "instanc": 7, "afterward": 7, "instead": 7, "sinc": 7, "former": 7, "take": 7, "care": 7, "run": 7, "regist": 7, "hook": 7, "latter": 7, "silent": 7, "ignor": 7, "them": 7, "dict": 7, "int": 7, "complex": 7, "float": 7, "spars": 7, "indic": 7}, "objects": {"": [[2, 0, 0, "-", "polytensor"]], "polytensor": [[7, 0, 0, "-", "polynomial"]], "polytensor.polynomial": [[7, 1, 1, "", "DensePolynomial"], [7, 1, 1, "", "Polynomial"], [7, 1, 1, "", "SparsePolynomial"]], "polytensor.polynomial.DensePolynomial": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "polyD"], [7, 2, 1, "", "validate"]], "polytensor.polynomial.Polynomial": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "validate"]], "polytensor.polynomial.SparsePolynomial": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "nanometaml": 0, "": 0, "document": 0, "content": 0, "polytensor": [2, 3, 4, 5, 7], "polynomi": [3, 4, 7], "api": 4, "usag": [4, 8], "instal": [4, 8], "exampl": 4, "spars": 4, "dens": 4, "v": 4, "represent": 4, "modul": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to NanoMetaML\u2019s documentation!": [[0, "welcome-to-nanometaml-s-documentation"]], "Contents:": [[0, null]], "polytensor": [[2, "module-polytensor"], [4, "polytensor"], [5, "polytensor"]], "polytensor.Polynomial": [[3, "polytensor-polynomial"]], "API": [[4, "api"]], "Usage": [[4, "usage"], [8, "usage"]], "Installation": [[4, "installation"], [8, "installation"]], "Examples": [[4, "examples"]], "Polynomial": [[4, "polynomial"]], "Sparse Polynomials": [[4, "sparse-polynomials"]], "Dense Polynomials": [[4, "dense-polynomials"]], "Sparse vs Dense Representation": [[4, "sparse-vs-dense-representation"]], "polytensor.polynomial module": [[7, "module-polytensor.polynomial"]]}, "indexentries": {"module": [[2, "module-polytensor"], [7, "module-polytensor.polynomial"]], "polytensor": [[2, "module-polytensor"]], "densepolynomial (class in polytensor.polynomial)": [[7, "polytensor.polynomial.DensePolynomial"]], "polynomial (class in polytensor.polynomial)": [[7, "polytensor.polynomial.Polynomial"]], "sparsepolynomial (class in polytensor.polynomial)": [[7, "polytensor.polynomial.SparsePolynomial"]], "forward() (polytensor.polynomial.densepolynomial method)": [[7, "polytensor.polynomial.DensePolynomial.forward"]], "forward() (polytensor.polynomial.polynomial method)": [[7, "polytensor.polynomial.Polynomial.forward"]], "forward() (polytensor.polynomial.sparsepolynomial method)": [[7, "polytensor.polynomial.SparsePolynomial.forward"]], "polyd() (polytensor.polynomial.densepolynomial method)": [[7, "polytensor.polynomial.DensePolynomial.polyD"]], "polytensor.polynomial": [[7, "module-polytensor.polynomial"]], "validate() (polytensor.polynomial.densepolynomial method)": [[7, "polytensor.polynomial.DensePolynomial.validate"]], "validate() (polytensor.polynomial.polynomial method)": [[7, "polytensor.polynomial.Polynomial.validate"]], "validate() (polytensor.polynomial.sparsepolynomial method)": [[7, "polytensor.polynomial.SparsePolynomial.validate"]]}})